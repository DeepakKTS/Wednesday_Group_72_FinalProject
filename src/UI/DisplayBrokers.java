/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.Broker;
import Model.BrokerDirectory;
import Model.SQLconnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;


/**
 *
 * @author deepakzedler
 */
public class DisplayBrokers extends javax.swing.JPanel {

    /**
     * Creates new form DisplayBrokers
     */
    
    BrokerDirectory bd = new BrokerDirectory();
    DefaultTableModel model;
    
    public DisplayBrokers() {
        initComponents();
        bd.getBrokerDirectory();
        PopulateTable();
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblbroker = new javax.swing.JTable();
        txtmanagement = new javax.swing.JTextField();
        lblusername = new javax.swing.JLabel();
        lblmanagement = new javax.swing.JLabel();
        txtbrokername = new javax.swing.JTextField();
        txtlicenseno = new javax.swing.JTextField();
        txtcontactno = new javax.swing.JTextField();
        lblbrokername = new javax.swing.JLabel();
        txtemailid = new javax.swing.JTextField();
        lbllicenseno = new javax.swing.JLabel();
        txtbrokerfee = new javax.swing.JTextField();
        lblcontactno = new javax.swing.JLabel();
        txtusername = new javax.swing.JTextField();
        lblemail = new javax.swing.JLabel();
        lblbrokerfee = new javax.swing.JLabel();
        btnviewbrokerdetails = new javax.swing.JButton();
        btnupdatebrokerdetails = new javax.swing.JButton();
        btndeletebrokerdetails = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 153));

        tblbroker.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Broker Name", "License No", "Contact No ", "Email ID", "Broker Fee", "Username", "Password", "Management", "null"
            }
        ));
        jScrollPane1.setViewportView(tblbroker);
        if (tblbroker.getColumnModel().getColumnCount() > 0) {
            tblbroker.getColumnModel().getColumn(5).setMinWidth(0);
            tblbroker.getColumnModel().getColumn(5).setPreferredWidth(0);
            tblbroker.getColumnModel().getColumn(5).setMaxWidth(0);
            tblbroker.getColumnModel().getColumn(6).setMinWidth(0);
            tblbroker.getColumnModel().getColumn(6).setPreferredWidth(0);
            tblbroker.getColumnModel().getColumn(6).setMaxWidth(0);
            tblbroker.getColumnModel().getColumn(8).setMinWidth(0);
            tblbroker.getColumnModel().getColumn(8).setPreferredWidth(0);
            tblbroker.getColumnModel().getColumn(8).setMaxWidth(0);
        }

        lblusername.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblusername.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblusername.setText("Username:");
        lblusername.setFocusTraversalPolicyProvider(true);

        lblmanagement.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblmanagement.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblmanagement.setText("Management:");

        txtbrokername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbrokernameActionPerformed(evt);
            }
        });

        lblbrokername.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblbrokername.setText("Broker Name:");

        lbllicenseno.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbllicenseno.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbllicenseno.setText("License No:");

        lblcontactno.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblcontactno.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblcontactno.setText("Contact No:");

        lblemail.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblemail.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblemail.setText("Email ID:");

        lblbrokerfee.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblbrokerfee.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblbrokerfee.setText("Broker Fee:");

        btnviewbrokerdetails.setFont(new java.awt.Font("Segoe UI Black", 3, 12)); // NOI18N
        btnviewbrokerdetails.setText("View Broker Details");
        btnviewbrokerdetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnviewbrokerdetailsActionPerformed(evt);
            }
        });

        btnupdatebrokerdetails.setFont(new java.awt.Font("Segoe UI Black", 3, 12)); // NOI18N
        btnupdatebrokerdetails.setText("Update Broker Details");
        btnupdatebrokerdetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdatebrokerdetailsActionPerformed(evt);
            }
        });

        btndeletebrokerdetails.setFont(new java.awt.Font("Segoe UI Black", 3, 12)); // NOI18N
        btndeletebrokerdetails.setText("Delete Broker Details");
        btndeletebrokerdetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeletebrokerdetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 734, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbllicenseno, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblbrokername, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblcontactno)
                            .addComponent(lblemail, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblbrokerfee, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblusername, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblmanagement))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtbrokername, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtlicenseno, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtemailid, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnviewbrokerdetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnupdatebrokerdetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btndeletebrokerdetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(79, 79, 79))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtusername, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(144, 423, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtcontactno, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtbrokerfee, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtmanagement, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(52, 52, 52))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblbrokername)
                    .addComponent(txtbrokername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnviewbrokerdetails))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbllicenseno)
                            .addComponent(txtlicenseno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(btnupdatebrokerdetails)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblcontactno)
                    .addComponent(txtcontactno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblemail)
                            .addComponent(txtemailid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(btndeletebrokerdetails)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblbrokerfee)
                    .addComponent(txtbrokerfee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblusername)
                    .addComponent(txtusername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtmanagement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblmanagement))
                .addGap(55, 55, 55)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtbrokernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbrokernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbrokernameActionPerformed

    private void btnupdatebrokerdetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdatebrokerdetailsActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblbroker.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to update details.");
            return;
        }

        try {
            // Update the selected row in the database
            Connection con = SQLconnection.dbconnector();
            PreparedStatement stmt = con.prepareStatement("UPDATE Brokers SET Name=?, ContactNumber=?, EmailID=?, BrokerFee=?, Management=? WHERE LicenseNumber=?");

            stmt.setString(1, txtbrokername.getText());
            stmt.setString(2, txtcontactno.getText());
            stmt.setString(3, txtemailid.getText());
            stmt.setInt(4, Integer.parseInt(txtbrokerfee.getText()));
            stmt.setString(5, txtmanagement.getText());
            stmt.setInt(6, Integer.parseInt(txtlicenseno.getText()));

            stmt.executeUpdate();

            JOptionPane.showMessageDialog(this, "Broker details updated successfully.");
            PopulateTable();

            stmt.close();
            con.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error updating broker details: " + ex.getMessage());
        }
              
         
             
    }//GEN-LAST:event_btnupdatebrokerdetailsActionPerformed

    private void btndeletebrokerdetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeletebrokerdetailsActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblbroker.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        try {
            // Delete the selected row from the database
            Connection con = SQLconnection.dbconnector();
            PreparedStatement stmt = con.prepareStatement("DELETE FROM Brokers WHERE LicenseNumber=?");

            int licenseNo = Integer.parseInt(tblbroker.getValueAt(selectedRowIndex, 1).toString());
            stmt.setInt(1, licenseNo);

            stmt.executeUpdate();

            JOptionPane.showMessageDialog(this, "Broker details deleted successfully.");
            PopulateTable();

            stmt.close();
            con.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error deleting broker details: " + ex.getMessage());
        }
         
        
        
    }//GEN-LAST:event_btndeletebrokerdetailsActionPerformed

    private void btnviewbrokerdetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewbrokerdetailsActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblbroker.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view details.");
            return;
        }

        // Populate text fields with the selected row's data
        DefaultTableModel model = (DefaultTableModel) tblbroker.getModel();
        txtbrokername.setText(model.getValueAt(selectedRowIndex, 0).toString());
        txtlicenseno.setText(model.getValueAt(selectedRowIndex, 1).toString());
        txtcontactno.setText(model.getValueAt(selectedRowIndex, 2).toString());
        txtemailid.setText(model.getValueAt(selectedRowIndex, 3).toString());
        txtbrokerfee.setText(model.getValueAt(selectedRowIndex, 4).toString());
        txtmanagement.setText(model.getValueAt(selectedRowIndex, 5).toString());
   
    }//GEN-LAST:event_btnviewbrokerdetailsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndeletebrokerdetails;
    private javax.swing.JButton btnupdatebrokerdetails;
    private javax.swing.JButton btnviewbrokerdetails;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblbrokerfee;
    private javax.swing.JLabel lblbrokername;
    private javax.swing.JLabel lblcontactno;
    private javax.swing.JLabel lblemail;
    private javax.swing.JLabel lbllicenseno;
    private javax.swing.JLabel lblmanagement;
    private javax.swing.JLabel lblusername;
    private javax.swing.JTable tblbroker;
    private javax.swing.JTextField txtbrokerfee;
    private javax.swing.JTextField txtbrokername;
    private javax.swing.JTextField txtcontactno;
    private javax.swing.JTextField txtemailid;
    private javax.swing.JTextField txtlicenseno;
    private javax.swing.JTextField txtmanagement;
    private javax.swing.JTextField txtusername;
    // End of variables declaration//GEN-END:variables
private void PopulateTable()
    {
      
  
        model = (DefaultTableModel) tblbroker.getModel();
        model.setRowCount(0);

        try {
            // Fetch broker data from the database
            Connection con = SQLconnection.dbconnector();
            PreparedStatement stmt = con.prepareStatement("SELECT * FROM Brokers");
            ResultSet rs = stmt.executeQuery();

            while (rs.next()) {
                Object[] row = new Object[6];
                row[0] = rs.getString("Name");
                row[1] = rs.getInt("LicenseNumber");
                row[2] = rs.getString("ContactNumber");
                row[3] = rs.getString("EmailID");
                row[4] = rs.getInt("BrokerFee");
                row[5] = rs.getString("Management");
                model.addRow(row);
            }

            rs.close();
            stmt.close();
            con.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error fetching broker data: " + ex.getMessage());
        }
    }}
