/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

//import Model.AppointmentReq;
//import Model.AppointmentRequesthistory;
import Model.AppointmentReq;
import Model.AppointmentRequesthistory;
import Model.BookingRequest;
import Model.Broker;
import Model.EmailUtility;
import Model.Requeststudent;
import Model.SQLconnection;
import Model.Studenthistory;
import java.sql.Connection;
import java.sql.Statement;
import java.util.Properties;
//import javax.mail.Message;
//import javax.mail.PasswordAuthentication;
//import javax.mail.Session;
//import javax.mail.Transport;
//import javax.mail.internet.InternetAddress;
//import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author deepakzedler
 */
 
public class ViewAppointmentbookings extends javax.swing.JPanel {

    /**
     * Creates new form ViewAppointmentbookings
     */
AppointmentRequesthistory history = new AppointmentRequesthistory();

    public ViewAppointmentbookings() {
        initComponents();
        this.setSize(1024, 768);
        PopulateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblstudentid = new javax.swing.JLabel();
        lblstudentname = new javax.swing.JLabel();
        lblcontactno = new javax.swing.JLabel();
        lblemailid = new javax.swing.JLabel();
        txtstudentid = new javax.swing.JTextField();
        txtstudentname = new javax.swing.JTextField();
        txtcontactno = new javax.swing.JTextField();
        txtemailid = new javax.swing.JTextField();
        btnacceptbooking = new javax.swing.JButton();
        btncancelbooking = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblviewstudent = new javax.swing.JTable();
        btnview = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 153, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblstudentid.setFont(new java.awt.Font("Big Caslon", 1, 14)); // NOI18N
        lblstudentid.setText("Student ID:");
        add(lblstudentid, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 320, -1, -1));

        lblstudentname.setFont(new java.awt.Font("Big Caslon", 1, 14)); // NOI18N
        lblstudentname.setText("Student Name:");
        add(lblstudentname, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 360, -1, -1));

        lblcontactno.setFont(new java.awt.Font("Big Caslon", 1, 14)); // NOI18N
        lblcontactno.setText("Contact Number:");
        add(lblcontactno, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 400, -1, -1));

        lblemailid.setFont(new java.awt.Font("Big Caslon", 1, 14)); // NOI18N
        lblemailid.setText("Email ID: ");
        add(lblemailid, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 440, -1, -1));

        txtstudentid.setFont(new java.awt.Font("Big Caslon", 1, 14)); // NOI18N
        txtstudentid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtstudentidActionPerformed(evt);
            }
        });
        add(txtstudentid, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 310, 360, 30));

        txtstudentname.setFont(new java.awt.Font("Big Caslon", 1, 14)); // NOI18N
        add(txtstudentname, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 350, 360, 30));

        txtcontactno.setFont(new java.awt.Font("Big Caslon", 1, 14)); // NOI18N
        add(txtcontactno, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 390, 360, 30));

        txtemailid.setFont(new java.awt.Font("Big Caslon", 1, 14)); // NOI18N
        add(txtemailid, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 430, 360, 30));

        btnacceptbooking.setFont(new java.awt.Font("Big Caslon", 1, 14)); // NOI18N
        btnacceptbooking.setText("Accept Booking");
        btnacceptbooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnacceptbookingActionPerformed(evt);
            }
        });
        add(btnacceptbooking, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 540, 140, 40));

        btncancelbooking.setFont(new java.awt.Font("Big Caslon", 1, 14)); // NOI18N
        btncancelbooking.setText("Cancel Booking");
        btncancelbooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelbookingActionPerformed(evt);
            }
        });
        add(btncancelbooking, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 540, 170, 40));

        tblviewstudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Student ID", "Student Name", "Contact Name", "Email ID"
            }
        ));
        jScrollPane1.setViewportView(tblviewstudent);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 512, 151));

        btnview.setFont(new java.awt.Font("Big Caslon", 1, 14)); // NOI18N
        btnview.setText("View");
        btnview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnviewActionPerformed(evt);
            }
        });
        add(btnview, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 250, 100, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project Images/gradient (1).jpeg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, 770));
    }// </editor-fold>//GEN-END:initComponents

    private void txtstudentidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtstudentidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtstudentidActionPerformed

    private void btnacceptbookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnacceptbookingActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblviewstudent.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to accept the booking.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblviewstudent.getModel();
        String toEmail = model.getValueAt(selectedRowIndex, 3).toString(); // Email ID
        String studentId = model.getValueAt(selectedRowIndex, 0).toString(); // Student ID
        String studentName = model.getValueAt(selectedRowIndex, 1).toString(); // Name

        try {
            // Send confirmation email
            String subject = "Booking Accepted";
            String body = "Dear " + studentName + ",\n\nYour booking has been accepted.\nThank you for reaching out.\n\nBest regards,\nRealty Team";
            EmailUtility.sendEmail(toEmail, subject, body);

            // Delete the record from the database
            Connection con = SQLconnection.dbconnector();
            Statement stmt = con.createStatement();
            String query = "DELETE FROM BookingRequest WHERE ID = '" + studentId + "'";
            stmt.executeUpdate(query);
            stmt.close();
            con.close();

            // Update table
            model.removeRow(selectedRowIndex);

            JOptionPane.showMessageDialog(this, "Booking accepted and email sent successfully!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error while processing: " + ex.getMessage());
            ex.printStackTrace();
        }
          
    }//GEN-LAST:event_btnacceptbookingActionPerformed

    private void btnviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblviewstudent.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view details.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblviewstudent.getModel();
        txtstudentid.setText(model.getValueAt(selectedRow, 0).toString());
        txtstudentname.setText(model.getValueAt(selectedRow, 1).toString());
        txtcontactno.setText(model.getValueAt(selectedRow, 2).toString());
        txtemailid.setText(model.getValueAt(selectedRow, 3).toString());
        //txttimeslot.setText(model.getValueAt(selectedRow, 4).toString());
        
    }//GEN-LAST:event_btnviewActionPerformed

    private void btncancelbookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelbookingActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblviewstudent.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to cancel the booking.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblviewstudent.getModel();
        String toEmail = model.getValueAt(selectedRowIndex, 3).toString(); // Email ID
        String studentId = model.getValueAt(selectedRowIndex, 0).toString(); // Student ID
        String studentName = model.getValueAt(selectedRowIndex, 1).toString(); // Name

        try {
            // Send cancellation email
            String subject = "Booking Cancelled";
            String body = "Dear " + studentName + ",\n\nYour booking has been cancelled.\nSorry for the inconvenience.\n\nBest regards,\nRealty Team";
            EmailUtility.sendEmail(toEmail, subject, body);

            // Delete the record from the database
            Connection con = SQLconnection.dbconnector();
            Statement stmt = con.createStatement();
            String query = "DELETE FROM BookingRequest WHERE ID = '" + studentId + "'";
            stmt.executeUpdate(query);
            stmt.close();
            con.close();

            // Update table
            model.removeRow(selectedRowIndex);

            JOptionPane.showMessageDialog(this, "Booking cancelled and email sent successfully!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error while processing: " + ex.getMessage());
            ex.printStackTrace();
        } 
     
     
    
      
    }//GEN-LAST:event_btncancelbookingActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnacceptbooking;
    private javax.swing.JButton btncancelbooking;
    private javax.swing.JButton btnview;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblcontactno;
    private javax.swing.JLabel lblemailid;
    private javax.swing.JLabel lblstudentid;
    private javax.swing.JLabel lblstudentname;
    private javax.swing.JTable tblviewstudent;
    private javax.swing.JTextField txtcontactno;
    private javax.swing.JTextField txtemailid;
    private javax.swing.JTextField txtstudentid;
    private javax.swing.JTextField txtstudentname;
    // End of variables declaration//GEN-END:variables

private void PopulateTable() {
    DefaultTableModel model = (DefaultTableModel) tblviewstudent.getModel();
        model.setRowCount(0);

        for (BookingRequest request : history.getBookingHistory()) {
            Object[] row = new Object[5];
            row[0] = request.getId();
            row[1] = request.getName();
            row[2] = request.getContactNo();
            row[3] = request.getEmailId();
            //row[4] = request.getTimeSlot();
            model.addRow(row);
}

}}
